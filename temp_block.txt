
  // Handle delete club (only creator can do this)
  const handleDelete = async () => {
    if (!window.confirm("Are you sure you want to delete this club? This cannot be undone.")) return;
    try {
      setDeleting(true);
      const res = await fetch(`${API_BASE}/api/clubs/${club.id}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ userId: user.id }),
      });
      const data = await res.json();
      if (res.ok) {
        alert("Club deleted successfully.");
        navigate("/user-home");
      } else {
        alert(data.error || "Failed to delete club.");
      }
    } catch (err) {
      console.error(err);
      alert("Error deleting club.");
    } finally {
      setDeleting(false);
    }
  };

  // Handle save profile from edit modal
  const handleSaveProfile = async (updatedData) => {
    try {
      // Extract data from ProfileEdit format
      const { name, email, bio, avatarFile, removeAvatar } = updatedData;
      
      // Update profile
      await updateProfile(user.id, {
        name,
        email,
        profile: {
          bio,
          fullName: name,
          username: user.profile?.username || `user_${user.id}`,
        },
      });

      // Handle avatar
      if (avatarFile) {
        await uploadAvatar(user.id, avatarFile);
      } else if (removeAvatar) {
        await updateProfile(user.id, {
          profile: {
            bio,
            fullName: name,
            username: user.profile?.username || `user_${user.id}`,
            profilePicture: null,
          },
