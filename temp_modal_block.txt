        </div>
      </main>

      {/* Book Assignment Modal */}
      {isModalOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
          <div className="bg-white rounded-xl shadow-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto" style={{ backgroundColor: "#FDFBF6" }}>
            <div className="p-6">
              <div className="flex justify-between items-center mb-4">
                <h2 className="text-2xl font-semibold text-gray-800" style={{ fontFamily: "Times New Roman, serif" }}>
                  Assign Book to Club
                </h2>
                <button
                  onClick={() => {
                    setIsModalOpen(false);
                    setSearchQuery("");
                    setSearchResults([]);
                    setSelectedBook(null);
                    setBookDetails({
                      title: "",
                      authors: "",
                      cover: "",
                      description: "",
                      year: "",
                      genre: "",
                    });
                  }}
                  className="text-gray-500 hover:text-gray-700"
                >
                  <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>

              {/* Search Section */}
              <div className="mb-6">
                <div className="flex gap-2 mb-4">
                  <input
                    type="text"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    onKeyPress={(e) => e.key === "Enter" && handleSearch()}
                    placeholder="Search for a book..."
                    className="flex-1 border border-[#ddcdb7] rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-gray-400"
                    style={{ fontFamily: "Times New Roman, serif", backgroundColor: "#FDFBF6" }}
                  />
                  <button
                    onClick={handleSearch}
                    className="px-4 py-2 rounded-lg border border-[#ddcdb7] bg-[#efe6d7] hover:bg-[#e3d5c2] transition-colors"
                    style={{ fontFamily: "Times New Roman, serif" }}
                  >
                    Search
                  </button>
                </div>

                {/* Search Results */}
                {searchResults.length > 0 && (
                  <div className="space-y-2 max-h-60 overflow-y-auto">
                    {searchResults.map((book, index) => (
                      <button
                        key={index}
                        onClick={() => handleSelectBook(book)}
                        className={`w-full p-3 rounded-lg border text-left transition-colors ${
                          selectedBook === book
                            ? "bg-[#e3d5c2] border-[#774C30]"
                            : "bg-[#faf6ed] border-[#ddcdb7] hover:bg-[#efe6d7]"
                        }`}
                        style={{ fontFamily: "Times New Roman, serif" }}
                      >
                        <div className="flex gap-3">
                          {book.cover && (
                            <img src={book.cover} alt={book.title} className="w-12 h-16 object-cover rounded" />
                          )}
                          <div className="flex-1">
                            <h3 className="font-semibold text-gray-800">{book.title}</h3>
                            <p className="text-sm text-gray-600">by {book.author}</p>
                            {book.first_publish_year && (
